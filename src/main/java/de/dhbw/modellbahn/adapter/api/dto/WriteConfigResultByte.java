/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dhbw.modellbahn.adapter.api.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * WriteConfigResultByte
 */
@JsonPropertyOrder({
        WriteConfigResultByte.JSON_PROPERTY_IS_WRITE_SUCCESSFUL,
        WriteConfigResultByte.JSON_PROPERTY_IS_VERIFY_SUCCESSFUL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-21T20:30:51.693715200+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class WriteConfigResultByte {
    public static final String JSON_PROPERTY_IS_WRITE_SUCCESSFUL = "is_write_successful";
    public static final String JSON_PROPERTY_IS_VERIFY_SUCCESSFUL = "is_verify_successful";
    @javax.annotation.Nonnull
    private Boolean isWriteSuccessful;
    @javax.annotation.Nonnull
    private Boolean isVerifySuccessful;

    public WriteConfigResultByte() {
    }

    public WriteConfigResultByte isWriteSuccessful(@javax.annotation.Nonnull Boolean isWriteSuccessful) {
        this.isWriteSuccessful = isWriteSuccessful;
        return this;
    }

    /**
     * Get isWriteSuccessful
     *
     * @return isWriteSuccessful
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_WRITE_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsWriteSuccessful() {
        return isWriteSuccessful;
    }


    @JsonProperty(JSON_PROPERTY_IS_WRITE_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsWriteSuccessful(@javax.annotation.Nonnull Boolean isWriteSuccessful) {
        this.isWriteSuccessful = isWriteSuccessful;
    }


    public WriteConfigResultByte isVerifySuccessful(@javax.annotation.Nonnull Boolean isVerifySuccessful) {
        this.isVerifySuccessful = isVerifySuccessful;
        return this;
    }

    /**
     * Get isVerifySuccessful
     *
     * @return isVerifySuccessful
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_VERIFY_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsVerifySuccessful() {
        return isVerifySuccessful;
    }


    @JsonProperty(JSON_PROPERTY_IS_VERIFY_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsVerifySuccessful(@javax.annotation.Nonnull Boolean isVerifySuccessful) {
        this.isVerifySuccessful = isVerifySuccessful;
    }


    /**
     * Return true if this WriteConfigResultByte object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WriteConfigResultByte writeConfigResultByte = (WriteConfigResultByte) o;
        return Objects.equals(this.isWriteSuccessful, writeConfigResultByte.isWriteSuccessful) &&
                Objects.equals(this.isVerifySuccessful, writeConfigResultByte.isVerifySuccessful);
    }

    @Override
    public int hashCode() {
        return Objects.hash(isWriteSuccessful, isVerifySuccessful);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WriteConfigResultByte {\n");
        sb.append("    isWriteSuccessful: ").append(toIndentedString(isWriteSuccessful)).append("\n");
        sb.append("    isVerifySuccessful: ").append(toIndentedString(isVerifySuccessful)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


}

