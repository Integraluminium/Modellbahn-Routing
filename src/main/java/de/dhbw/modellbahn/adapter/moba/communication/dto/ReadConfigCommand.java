/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.dhbw.modellbahn.adapter.moba.communication.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * ReadConfigCommand
 */
@JsonPropertyOrder({
        ReadConfigCommand.JSON_PROPERTY_HASH_VALUE,
        ReadConfigCommand.JSON_PROPERTY_RESPONSE,
        ReadConfigCommand.JSON_PROPERTY_LOC_ID,
        ReadConfigCommand.JSON_PROPERTY_INDEX,
        ReadConfigCommand.JSON_PROPERTY_NUMBER,
        ReadConfigCommand.JSON_PROPERTY_COUNT,
        ReadConfigCommand.JSON_PROPERTY_VALUE
})
public class ReadConfigCommand {
    public static final String JSON_PROPERTY_HASH_VALUE = "hash_value";
    public static final String JSON_PROPERTY_RESPONSE = "response";
    public static final String JSON_PROPERTY_LOC_ID = "loc_id";
    public static final String JSON_PROPERTY_INDEX = "index";
    public static final String JSON_PROPERTY_NUMBER = "number";
    public static final String JSON_PROPERTY_COUNT = "count";
    public static final String JSON_PROPERTY_VALUE = "value";
    private Integer hashValue;
    private Boolean response;
    private Integer locId;
    private Integer index;
    private Integer number;
    private Integer count;
    private Integer value;

    public ReadConfigCommand() {
    }

    public ReadConfigCommand hashValue(Integer hashValue) {
        this.hashValue = hashValue;
        return this;
    }

    /**
     * Get hashValue
     *
     * @return hashValue
     */
    @JsonProperty(JSON_PROPERTY_HASH_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getHashValue() {
        return hashValue;
    }


    @JsonProperty(JSON_PROPERTY_HASH_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHashValue(Integer hashValue) {
        this.hashValue = hashValue;
    }


    public ReadConfigCommand response(Boolean response) {
        this.response = response;
        return this;
    }

    /**
     * Get response
     *
     * @return response
     */
    @JsonProperty(JSON_PROPERTY_RESPONSE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getResponse() {
        return response;
    }


    @JsonProperty(JSON_PROPERTY_RESPONSE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResponse(Boolean response) {
        this.response = response;
    }


    public ReadConfigCommand locId(Integer locId) {
        this.locId = locId;
        return this;
    }

    /**
     * Get locId
     *
     * @return locId
     */
    @JsonProperty(JSON_PROPERTY_LOC_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getLocId() {
        return locId;
    }


    @JsonProperty(JSON_PROPERTY_LOC_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLocId(Integer locId) {
        this.locId = locId;
    }


    public ReadConfigCommand index(Integer index) {
        this.index = index;
        return this;
    }

    /**
     * Get index
     *
     * @return index
     */
    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getIndex() {
        return index;
    }


    @JsonProperty(JSON_PROPERTY_INDEX)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIndex(Integer index) {
        this.index = index;
    }


    public ReadConfigCommand number(Integer number) {
        this.number = number;
        return this;
    }

    /**
     * Get number
     *
     * @return number
     */
    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getNumber() {
        return number;
    }


    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNumber(Integer number) {
        this.number = number;
    }


    public ReadConfigCommand count(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get count
     *
     * @return count
     */
    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCount() {
        return count;
    }


    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCount(Integer count) {
        this.count = count;
    }


    public ReadConfigCommand value(Integer value) {
        this.value = value;
        return this;
    }

    /**
     * Get value
     *
     * @return value
     */
    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getValue() {
        return value;
    }


    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValue(Integer value) {
        this.value = value;
    }

    @Override
    public int hashCode() {
        return Objects.hash(hashValue, response, locId, index, number, count, value);
    }

    /**
     * Return true if this ReadConfigCommand object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReadConfigCommand readConfigCommand = (ReadConfigCommand) o;
        return Objects.equals(this.hashValue, readConfigCommand.hashValue) &&
                Objects.equals(this.response, readConfigCommand.response) &&
                Objects.equals(this.locId, readConfigCommand.locId) &&
                Objects.equals(this.index, readConfigCommand.index) &&
                Objects.equals(this.number, readConfigCommand.number) &&
                Objects.equals(this.count, readConfigCommand.count) &&
                Objects.equals(this.value, readConfigCommand.value);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReadConfigCommand {\n");
        sb.append("    hashValue: ").append(toIndentedString(hashValue)).append("\n");
        sb.append("    response: ").append(toIndentedString(response)).append("\n");
        sb.append("    locId: ").append(toIndentedString(locId)).append("\n");
        sb.append("    index: ").append(toIndentedString(index)).append("\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


}

